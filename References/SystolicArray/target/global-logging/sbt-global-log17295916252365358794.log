[0m[[0m[0mdebug[0m] [0m[0m> Exec(testOnly systolic_architecture.SystolicArrayArchTest -- -oD, Some(212565ce-0b8a-40cf-b484-7bceca97b490), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / testOnly[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /home/talha/Desktop/SystolicArray/target/scala-2.12/classes ...[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/talha/Desktop/SystolicArray/src/main/scala/systolic_architecture/SystolicArch.scala:47:31: The s-interpolator prints the Scala .toString of Data objects rather than the value of the hardware wire during simulation. Use the cf-interpolator instead. If you want an elaboration time print, use println.[0m
[0m[[0m[33mwarn[0m] [0m[0m    row.foreach(elem => printf(s"${elem}, "))[0m
[0m[[0m[33mwarn[0m] [0m[0m                              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/talha/Desktop/SystolicArray/src/main/scala/systolic_architecture/SystolicArch.scala:52:31: The s-interpolator prints the Scala .toString of Data objects rather than the value of the hardware wire during simulation. Use the cf-interpolator instead. If you want an elaboration time print, use println.[0m
[0m[[0m[33mwarn[0m] [0m[0m    row.foreach(elem => printf(s"${elem}, "))[0m
[0m[[0m[33mwarn[0m] [0m[0m                              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/talha/Desktop/SystolicArray/src/main/scala/systolic_architecture/SystolicArch.scala:57:29: The s-interpolator prints the Scala .toString of Data objects rather than the value of the hardware wire during simulation. Use the cf-interpolator instead. If you want an elaboration time print, use println.[0m
[0m[[0m[33mwarn[0m] [0m[0m    row.foreach(pe => printf(s"${pe.io.in}, "))[0m
[0m[[0m[33mwarn[0m] [0m[0m                            ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/talha/Desktop/SystolicArray/src/main/scala/systolic_architecture/SystolicArch.scala:62:29: The s-interpolator prints the Scala .toString of Data objects rather than the value of the hardware wire during simulation. Use the cf-interpolator instead. If you want an elaboration time print, use println.[0m
[0m[[0m[33mwarn[0m] [0m[0m    row.foreach(pe => printf(s"${pe.io.out}, "))[0m
[0m[[0m[33mwarn[0m] [0m[0m                            ^[0m
[0m[[0m[33mwarn[0m] [0m[0mthere were 25 feature warnings; re-run with -feature for details[0m
[0m[[0m[33mwarn[0m] [0m[0m5 warnings found[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSystolicArrayArchTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- SystolicArrayArch *** FAILED *** (2 seconds, 674 milliseconds)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  io_output_0_0=0 (0x0) did not equal expected=1 (0x1) (lines in systolic_archTest.scala: 44, 40, 39, 11) (systolic_archTest.scala:44)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 2 seconds, 883 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 1, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 0, failed 1, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 1 TEST FAILED ***[0m[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	systolic_architecture.SystolicArrayArchTest[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtestOnly[0m) sbt.TestsFailedException: Tests unsuccessful[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 5 s, completed Dec 23, 2023, 1:35:29 PM[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mshutting down sbt server[0m
